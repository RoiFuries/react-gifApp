{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifexpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","catego","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAyCeA,EAtCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEFC,mBAAS,IAFP,mBAE/BC,EAF+B,KAEnBC,EAFmB,KAkBvC,OACI,mCAEA,sBAAMC,UAAU,oBAAoBC,SAdlB,SAACC,GACnBA,EAAEC,iBAECL,EAAWM,OAAOC,OAAO,IACxBT,GAAgB,SAAAU,GAAM,OAAKR,GAAL,mBAAoBQ,OAC1CP,EAAc,MASlB,SACI,uBACIQ,KAAK,OACLC,MAAQV,EACRW,SAtBe,SAACP,GACvBH,EAAcG,EAAEQ,OAAOF,e,+BCLnBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAWH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAKjC,OACI,sBAAKd,UAAU,4DAAf,UACI,qBAAK4B,IAAKd,EAAKe,IAAKL,IACpB,4BAAIA,QCNHM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACff,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAH4B,mBAClCC,EADkC,KAC3BC,EAD2B,KAkBzC,OAZAC,qBAAW,WACVvB,EAASC,GACRuB,MAAM,SAAAC,GAEHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAIf,CAACnB,IAEGoB,EDfyBK,CAAczB,GAAjCa,EADyB,EAC9BN,KAAaY,EADiB,EACjBA,QA0BpB,OACI,qCACI,oBAAI/B,UAAU,uDAAd,SAAsEY,IACrEmB,GAAW,yCAGZ,qBAAK/B,UAAU,YAAf,SAKQyB,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEOtBe,EA9CM,WAAM,IAAD,EAGczC,mBAAS,CAAC,WAHxB,mBAGf0C,EAHe,KAGH3C,EAHG,KAiBtB,OACI,qCACA,oBAAII,UAAU,oBAAd,sBACA,oBAAIA,UAAU,wBAAd,0BACA,cAAC,EAAD,CAAaJ,cAAeA,IAC5B,uBAEA,6BAEO2C,EAAWlB,KAAK,SAAAT,GAAQ,OAEnB,aADA,CACC,EAAD,CAEIA,SAAWA,GADLA,Y,MC5B9B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.817fa0f7.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n     const [inputValue, setInputValue] = useState(''); //und\n     const handleInputChange = (e) => {\n         setInputValue(e.target.value);\n     }\n\n     const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if(inputValue.trim().length>2){\n            setCategories ( catego => [inputValue, ...catego,]);\n            setInputValue('');\n        }\n\n        // console.log('Submit hecho');\n}\n\n    return (\n        <>\n        {/* <h1>{inputValue}</h1> */}\n        <form className='addCategory-input' onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            /> \n        </form>\n        \n\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory","\n\nexport const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI (category)}&limit=10&api_key=zsu2zoxcGFMEBonW4ZmDPig6GZQE9TjC`\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n         return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n    // setImages(gifs)\n}","import React from 'react'\n\nexport const GifGridItem = ( {title, url}) => {\n\n    // console.log(id, title, url);\n\n\n    return (\n        <div className=\"card animate__animated  animate__fadeIn animate__delay-2s\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n    const {data:images, loading} = useFetchGifs( category );\n   \n    // useEffect ( () => {\n    //     getGifs(category)\n    //         .then(setImages)\n    // }, [category])\n\n\n/////se fue al archivo getgifs para que esuviera mas limpio\n    // const getGifs = async() => {\n    //     const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI (category)}&limit=10&api_key=zsu2zoxcGFMEBonW4ZmDPig6GZQE9TjC`\n    //     const resp = await fetch( url );\n    //     const {data} = await resp.json();\n\n    //     const gifs = data.map( img => {\n    //          return {\n    //             id: img.id,\n    //             title: img.title,\n    //             url: img.images?.downsized_medium.url\n    //         }\n    //     })\n\n    //     console.log(gifs);\n    //     setImages(gifs)\n    // }\n\n    return (\n        <>\n            <h3 className='animate__animated  animate__flipInX animate__delay-3'>{category}</h3>\n            {loading && <p> Loading</p>}\n\n\n            <div className='card-grid'>\n                {\n                    // images.map( img => (\n                    //     <li key={img.id}> {img.title}</li>\n                    // ))\n                    images.map( img => (\n                        <GifGridItem \n                            key={img.id}\n                            {...img }\n                        />\n                        ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\nexport const useFetchGifs = ( category ) => {\n   const [state, setState] = useState({\n       data: [],\n       loading: true\n   });\n\n   useEffect( () => {\n    getGifs( category )\n    .then( imgs => {\n\n        setState({\n            data: imgs,\n            loading: false\n        })\n        \n    })\n   }, [category])\n\n   return state\n}\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nconst GifExpertApp = () =>{\n\n\n    const [categories, setCategories] = useState(['Naruto']);\n\n\n///////////////// function on button ////////////////////////////////////////////\n    // const handleAdd = () => {\n    //     // setCategories (['Malcom', ...categories]);\n    //     setCategories (catego => [...catego, 'malcom']);\n\n    //     // categories.push('malcom')\n    //     // console.log(categories);\n    // }\n\n\n\n    return (\n        <>\n        <h2 className='tile-GifExpertApp'>Gif-App </h2>\n        <h3 className='subtite--GifExpertApp'>by RoiFuries</h3>\n        <AddCategory setCategories={setCategories}/>\n        <hr/>\n\n        <ol>\n           {\n               categories.map( category => (\n                    // <li key={ category }> {category}</li>\n                    <GifGrid\n                        key={ category }\n                        category={ category }\n                    />\n                ))\n            }    \n        </ol>\n\n        {/* function on button */}\n        {/* <button onClick={ handleAdd } > agregar</button> */}\n\n\n    \n\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifexpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}